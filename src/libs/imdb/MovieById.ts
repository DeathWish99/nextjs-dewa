import { IMDB_URL, options } from "./index";
export default async function getAllMovie(
  movieId: string
): Promise<MovieByIDProps> {
  const req = await fetch(IMDB_URL + "/movie/" + movieId, options);
  if (!req.ok) {
    throw Error("failed to fetch  treading imdb movie ");
  }
  const response = (await req.json()) as unknown;
  return response as MovieByIDProps;
}
// Generated by https://quicktype.io

export interface MovieByIDProps {
  adult: boolean;
  backdrop_path: string;
  belongs_to_collection: null;
  budget: number;
  genres: Genre[];
  homepage: string;
  id: number;
  imdb_id: string;
  original_language: string;
  original_title: string;
  overview: string;
  popularity: number;
  poster_path: string;
  production_companies: ProductionCompany[];
  production_countries: ProductionCountry[];
  release_date: string;
  revenue: number;
  runtime: number;
  spoken_languages: SpokenLanguage[];
  status: string;
  tagline: string;
  title: string;
  video: boolean;
  vote_average: number;
  vote_count: number;
}

export interface Genre {
  id: number;
  name: string;
}

export interface ProductionCompany {
  id: number;
  logo_path: null | string;
  name: string;
  origin_country: string;
}

export interface ProductionCountry {
  iso_3166_1: string;
  name: string;
}

export interface SpokenLanguage {
  english_name: string;
  iso_639_1: string;
  name: string;
}
